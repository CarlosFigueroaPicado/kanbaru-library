---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Estadísticas">
  <section
    class="px-6 pb-16 max-w-7xl mx-auto space-y-16 w-full overflow-x-hidden dark:bg-black mt-8 md:mt-24"
  >
    <!-- Gráfico 1: Libros por Categoría -->
    <div class="card-estadistica">
      <h2 class="text-3xl font-bold mb-7 dark:text-white">
        Libros por Categoría
      </h2>

      <div class="grid grid-cols-1 md:grid-cols-2 gap-8 items-start">
        <!-- Columna izquierda: Gráfico + Leyendas -->
        <div class="flex flex-col items-center">
          <div class="w-[400px] h-[400px] relative">
            <canvas id="graficoCategorias" class="w-full h-full"></canvas>
          </div>
          <div
            id="leyendasCategorias"
            class="mt-6 flex flex-wrap justify-center gap-x-6 gap-y-2 text-sm text-center max-w-[400px]"
          >
            <!-- leyendas dinámicas -->
          </div>
        </div>

        <!-- Columna derecha: Tabla + Interpretación -->
        <div class="flex flex-col gap-6">
          <!-- Tabla de datos por categoría -->
          <div class="overflow-x-auto">
            <h3 class="text-lg font-semibold mb-2 dark:text-white">
              Datos Detallados
            </h3>
            <table
              class="min-w-full text-sm text-left border dark:border-zinc-600"
            >
              <thead
                class="bg-zinc-100 dark:bg-zinc-700 text-zinc-700 dark:text-zinc-200"
              >
                <tr>
                  <th class="px-3 py-2 border dark:border-zinc-600"
                    >Categoría</th
                  >
                  <th class="px-3 py-2 border dark:border-zinc-600 text-center"
                    >Total de Libros</th
                  >
                  <th class="px-3 py-2 border dark:border-zinc-600 text-center"
                    >Porcentaje</th
                  >
                </tr>
              </thead>
              <tbody
                id="tablaCategorias"
                class="text-zinc-800 dark:text-zinc-100"
              >
                <!-- contenido dinámico -->
              </tbody>
            </table>
          </div>

          <!-- Interpretación -->
          <div>
            <h3 class="text-xl font-semibold mb-3 dark:text-white">
              Interpretación
            </h3>
            <div
              class="text-base text-gray-800 dark:text-gray-200 space-y-3 text-justify leading-relaxed"
            >
              <p>
                Este análisis examina la distribución de libros físicos
                disponibles en la biblioteca según su categoría o temática (por
                ejemplo, literatura, ciencias sociales, tecnología, infantil,
                etc.). Permite evaluar si hay un equilibrio adecuado entre las
                distintas áreas del conocimiento y si la colección responde a
                las necesidades de los usuarios. También ayuda a detectar
                posibles desequilibrios o áreas que requieren reforzamiento,
                actualización o depuración.
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Gráfico 2: Préstamos Mensuales Promedio por Grupo de Edad -->
    <div class="card-estadistica">
      <h2 class="text-2xl font-bold mb-6 dark:text-white">
        Préstamos Mensuales Promedio por Grupo de Edad
      </h2>

      <div
        class="flex flex-col md:flex-row gap-8 md:gap-12 items-start min-h-[500px]"
      >
        <!-- Izquierda: Tabla + Interpretación -->
        <div class="w-full md:w-1/2 flex flex-col gap-6">
          <div class="overflow-x-auto">
            <h3 class="text-lg font-semibold mb-2 dark:text-white">
              Datos Detallados
            </h3>
            <table class="w-full text-sm text-left border dark:border-zinc-600">
              <thead
                class="bg-zinc-100 dark:bg-zinc-700 text-zinc-700 dark:text-zinc-200"
              >
                <tr>
                  <th class="px-3 py-2 border dark:border-zinc-600"
                    >Grupo de Edad</th
                  >
                  <th class="px-3 py-2 border dark:border-zinc-600 text-center"
                    >Promedio Mensual</th
                  >
                </tr>
              </thead>
              <tbody id="tablaEdad" class="text-zinc-800 dark:text-zinc-100">
              </tbody>
            </table>
          </div>

          <div>
            <h3 class="text-xl font-semibold mb-3 dark:text-white">
              Interpretación
            </h3>
            <p
              class="text-base text-gray-800 dark:text-gray-300 text-justify leading-relaxed"
            >
              Este análisis muestra el promedio mensual de préstamos realizados
              por usuarios agrupados por edades. Permite identificar qué
              segmentos de edad hacen un mayor uso de la biblioteca durante el
              año. Esto resulta útil para orientar campañas, seleccionar
              colecciones específicas o enfocar actividades de extensión
              bibliotecaria hacia los grupos más activos o los menos
              participativos. Detectar una baja participación en ciertos rangos
              etarios también puede ser una oportunidad para crear programas de
              incentivo o reforzar servicios enfocados.
            </p>
          </div>
        </div>

        <!-- Derecha: Gráfico -->
        <div class="w-full md:w-1/2 flex justify-center items-center">
          <div class="w-full max-w-[600px] h-[450px]">
            <canvas
              id="graficoPrestamosEdad"
              class="w-full h-full block"
              width="600"
              height="450"></canvas>
          </div>
        </div>
      </div>
    </div>

    <!-- Gráfico 3: Comparativo de Préstamos Mensuales por Año -->
    <div class="card-estadistica">
      <h2 class="text-2xl font-bold mb-6 dark:text-white">
        Comparativo de Préstamos Mensuales por Año
      </h2>

      <!-- Contenido: gráfico y tabla -->
      <div class="grid grid-cols-1 md:grid-cols-2 gap-8 items-start">
        <!-- Gráfico -->
        <div class="w-full flex justify-center items-center">
          <div class="w-full max-w-[650px] h-[500px]">
            <canvas
              id="graficoPrestamosAnuales"
              width="650"
              height="500"
              class="w-full h-full block"></canvas>
          </div>
        </div>

        <!-- Tabla + Interpretación -->
        <div class="flex flex-col gap-6">
          <!-- Tabla -->
          <div class="overflow-x-auto">
            <h3 class="text-lg font-semibold mb-2 dark:text-white">
              Datos por Mes y Año
            </h3>
            <table class="w-full text-sm text-left border dark:border-zinc-600">
              <thead
                id="cabeceraAnuales"
                class="bg-zinc-100 dark:bg-zinc-700 text-zinc-700 dark:text-zinc-200"
              ></thead>
              <tbody
                id="tablaPrestamosAnuales"
                class="text-zinc-800 dark:text-zinc-100"></tbody>
            </table>
          </div>

          <!-- Interpretación -->
          <div>
            <h3 class="text-xl font-semibold mb-3 dark:text-white">
              Interpretación
            </h3>
            <p
              class="text-base text-gray-800 dark:text-gray-300 text-justify leading-relaxed"
            >
              Este gráfico muestra la evolución mensual de los préstamos durante
              los dos últimos años registrados en el sistema. Esta comparación
              permite identificar cambios recientes en el comportamiento de los
              usuarios, detectar patrones estacionales como aumentos durante
              ciertos meses (vacaciones, inicio de clases, etc.), y evaluar si
              ha habido crecimiento o disminución en la demanda de servicios
              bibliotecarios en el último año.
            </p>
            <p
              class="text-base text-gray-800 dark:text-gray-300 text-justify leading-relaxed mt-2"
            >
              Al centrarse en los datos más actuales, este análisis es útil para
              tomar decisiones estratégicas a corto plazo, como refuerzo de
              personal, campañas de promoción, o adquisición de nuevos
              materiales.
            </p>
          </div>
        </div>
      </div>
    </div>

    <!-- Puedes seguir agregando otros gráficos aquí -->
  </section>

  <!-- Chart.js CDN + Script de estadísticas -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
    import { Chart } from "chart.js/auto";
import { getTema, TemaEvents } from "../../src/utils/temaPage";
    let chartCategorias: Chart | null = null;

    async function cargarGraficoCategorias() {
      try {
        const res = await fetch("/api/estadisticas/categorias");
        const data = await res.json();
        if (!Array.isArray(data) || data.length === 0) return;

        const labels = data.map((d) => d.categoria);
        const valores = data.map((d) => d.total);
        const total = valores.reduce((a, b) => a + b, 0);

        const backgroundColor =
          getTema() === "oscuro"
            ? ["#27272a", "#3f3f46", "#52525b", "#262626"]
            : [
                "#7B5E53",
                "#A0826F",
                "#937263",
                "#654E47",
                "#AD998F",
                "#CDBAB3",
                "#B8A69E",
                "#8D776E",
                "#B29487",
                "#D9C2B5",
              ];

        const canvas = document.getElementById("graficoCategorias") as HTMLCanvasElement;
        if (!canvas) return;
        const ctx = canvas.getContext("2d");

        if(!ctx) return;

        if (chartCategorias) chartCategorias.destroy();
        chartCategorias = new Chart(ctx, {
          type: "pie",
          data: {
            labels,
            datasets: [{ data: valores, backgroundColor }],
          },
          options: { plugins: { legend: { display: false } } },
        });

        // Leyendas
        const contenedor = document.getElementById("leyendasCategorias") as HTMLDivElement;
        contenedor.innerHTML = "";
        const datosOrdenados = labels
          .map((label, i) => ({
            label,
            valor: valores[i],
            porcentaje: ((valores[i] / total) * 100).toFixed(1),
            color: backgroundColor[i],
          }))
          .sort((a, b) => b.valor - a.valor);

        datosOrdenados.forEach(({ label, porcentaje, color }) => {
          const span = document.createElement("span");
          span.className =
            "inline-flex items-center gap-1 text-sm whitespace-nowrap";
          span.innerHTML = `<span style="color:${color}; font-size: 1.2rem;">●</span> <span>${label} (${porcentaje}%)</span>`;
          contenedor.appendChild(span);
        });

        // Tabla
        const cuerpoTabla = document.getElementById("tablaCategorias") as HTMLTableElement;
        cuerpoTabla.innerHTML = "";
        datosOrdenados.forEach(({ label, valor, porcentaje }) => {
          const fila = document.createElement("tr");
          fila.innerHTML = `
        <td class="px-3 py-1 border dark:border-zinc-600">${label}</td>
        <td class="px-3 py-1 border text-center dark:border-zinc-600">${valor}</td>
        <td class="px-3 py-1 border text-center dark:border-zinc-600">${porcentaje}%</td>
      `;
          cuerpoTabla.appendChild(fila);
        });
      } catch (err) {
        console.error("Error al cargar gráfico de categorías:", err);
      }
    }

    // ----------------------
    // GRUPO DE EDAD
    // ----------------------
    let chartEdad: Chart | null = null;

    async function cargarGraficoPrestamosEdad() {
      try {
        const res = await fetch("/api/estadisticas/prestamos-edad");
        const data = await res.json();
        if (!Array.isArray(data) || data.length === 0) return;

        const labels = data.map((d) => d.grupo);
        const valores = data.map((d) => d.promedio);
        const promedioGeneral =
          valores.reduce((a, b) => a + b, 0) / valores.length;

        const canvas = document.getElementById("graficoPrestamosEdad") as HTMLCanvasElement;
        if (!canvas) return;
        const ctx = canvas.getContext("2d");

        if(!ctx) return;
        if (chartEdad) chartEdad.destroy();
        chartEdad = new Chart(ctx, {
          type: "bar",
          data: {
            labels,
            datasets: [
              {
                label: "Promedio por Grupo",
                data: valores,
                backgroundColor: getTema() === "oscuro" ? "#F0F0F0" : "#8B5E3C",
                borderRadius: 12,
                barPercentage: 0.6,
              },
              {
                label: "Promedio General",
                data: Array(valores.length).fill(promedioGeneral),
                type: "line",
                borderColor: getTema() === "oscuro" ? "#F0F0F0" : "#A9795A",
                borderWidth: 2,
                pointRadius: 0,
                fill: false,
              },
            ],
          },
          options: {
            responsive: true,
            plugins: {
              legend: { display: true },
            },
            scales: {
              y: { beginAtZero: true, ticks: { precision: 0 } },
            },
          },
        });

        // Tabla
        const tabla = document.getElementById("tablaEdad") as HTMLTableElement;
        tabla.innerHTML = "";
        data.forEach(({ grupo, promedio }) => {
          const fila = document.createElement("tr");
          fila.innerHTML = `
        <td class="px-3 py-1 border dark:border-zinc-600">${grupo}</td>
        <td class="px-3 py-1 border text-center dark:border-zinc-600">${promedio.toFixed(1)}</td>
      `;
          tabla.appendChild(fila);
        });
      } catch (err) {
        console.error("Error cargando gráfico de edad:", err);
      }
    }

    // ----------------------
    // COMPARATIVO ANUAL
    // ----------------------
    let chartAnual: Chart | null = null;
    let datosTotales: { anio: number; mes: string; total: number }[] = [];
    let todosLosAnios = [];

    async function cargarGraficoPrestamosAnuales() {
      try {
        const res = await fetch("/api/estadisticas/prestamos-anuales");
        const data = await res.json();
        if (!Array.isArray(data) || data.length === 0) return;

        datosTotales = data;
        todosLosAnios = [...new Set(data.map((d) => d.anio))].sort(
          (a, b) => a - b,
        );
        const ultimos = todosLosAnios.slice(-2);

        dibujarGraficoYTabla(ultimos);
      } catch (err) {
        console.error("Error al cargar datos:", err);
      }
    }

    const meses = [
      "Enero",
      "Febrero",
      "Marzo",
      "Abril",
      "Mayo",
      "Junio",
      "Julio",
      "Agosto",
      "Septiembre",
      "Octubre",
      "Noviembre",
      "Diciembre",
    ];

    function dibujarGraficoYTabla(aniosSeleccionados: number[]) {
      const canvas = document.getElementById("graficoPrestamosAnuales") as HTMLCanvasElement;
      const ctx = canvas.getContext("2d");

      if (chartAnual) chartAnual.destroy();

      const series = aniosSeleccionados.map((anio) => {
        const valores = meses.map((mes) => {
          const entrada = datosTotales.find(
            (d) => d.anio === anio && d.mes === mes,
          );
          return entrada ? entrada.total : 0;
        });

        return {
          label: `Año ${anio}`,
          data: valores,
          fill: false,
          tension: 0.3,
          borderWidth: 2,
        };
      });

      if(!ctx) return;

      chartAnual = new Chart(ctx, {
        type: "line",
        data: {
          labels: meses,
          datasets: series,
        },
        options: {
          responsive: true,
          plugins: {
            legend: { position: "top" },
          },
          scales: {
            y: { beginAtZero: true, ticks: { precision: 0 } },
          },
          borderColor: getTema() === "oscuro" ? "#F0F0F0" : "#A9795A",
        },
      });

      // Tabla
      const cabecera = document.getElementById("cabeceraAnuales") as HTMLTableElement;
      cabecera.innerHTML = `
    <tr>
      <th class="px-3 py-2 border dark:border-zinc-600">Mes</th>
      ${aniosSeleccionados.map((a) => `<th class="px-3 py-2 border text-center dark:border-zinc-600">${a}</th>`).join("")}
    </tr>
  `;

      const cuerpo = document.getElementById("tablaPrestamosAnuales") as HTMLTableElement;
      cuerpo.innerHTML = "";
      meses.forEach((mes, i) => {
        const fila = document.createElement("tr");
        const celdas = aniosSeleccionados.map((anio) => {
          const d = datosTotales.find((x) => x.anio === anio && x.mes === mes);
          return `<td class="px-3 py-1 border text-center dark:border-zinc-600">${d ? d.total : 0}</td>`;
        });
        fila.innerHTML = `<td class="px-3 py-1 border dark:border-zinc-600">${mes}</td>${celdas.join("")}`;
        cuerpo.appendChild(fila);
      });
    }

    // ----------------------
    // INICIALIZACIÓN ÚNICA
    // ----------------------
    document.addEventListener("DOMContentLoaded", () => {
      cargarGraficoCategorias();
      cargarGraficoPrestamosEdad();
      cargarGraficoPrestamosAnuales();
    });

    // Asegúrate de que TemaEvents esté disponible globalmente

    TemaEvents.addEventListener("tema-cambiado", () => {
      cargarGraficoCategorias();
      cargarGraficoPrestamosEdad();
      cargarGraficoPrestamosAnuales();
    });
  </script>
</Layout>
