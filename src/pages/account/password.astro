---
import LayoutAccount from "@layouts/LayoutAccount.astro";
---

<LayoutAccount title="Recuperar contraseña">
  <div class="container">
    <div class="form-box recover">
      <form id="email">
        <h1 class="font-bold mb-8">Recuperar contraseña</h1>
        <div class="forgot-link mb-6 mt-4">
          <a href="/account/password"
            >Ingrese su correo para verificar su identidad</a
          >
        </div>
        <div class="input-box">
          <input
            type="text"
            placeholder="Correo electrónico"
            required
            name="correo"
          />
          <i class="bx bxs-envelope"></i>
        </div>
        <div>
          <p id="error-msg-email" class="mb-4"></p>
        </div>
        <button type="submit" class="btn">Continuar</button>
      </form>
    </div>

    <div class="form-box register hidden">
      <form id="recover">
        <h1 class="font-bold">Recuperar contraseña</h1>
        <div class="input-box">
          <input type="text" placeholder="Código" required name="codigo" />
          <i class="bx bxs-lock-alt"></i>
        </div>
        <div class="input-box">
          <input
            type="password"
            placeholder="Contraseña"
            required
            name="contrasenia"
          />
          <i class="bx bxs-lock-alt"></i>
        </div>
        <div class="input-box">
          <input
            type="password"
            placeholder="Confirmar contraseña"
            required
            name="contrasenia_confirma"
          />
          <i class="bx bxs-lock-alt"></i>
        </div>
        <div>
          <p id="error-msg-password" class="mb-4"></p>
        </div>

        <button type="submit" class="btn">Continuar</button>
      </form>
    </div>

    <script>
      let token: string | null = null;
      let correo: string | null = null;

      document.addEventListener("submit", async (event) => {
        event.preventDefault();
        const formEmail = document.querySelector("#email") as HTMLFormElement;
        const formRecover = document.querySelector(
          "#recover",
        ) as HTMLFormElement;
        const errorMsgEmail = document.querySelector(
          "#error-msg-email",
        ) as HTMLParagraphElement;
        const errorMsgPassword = document.querySelector(
          "#error-msg-password",
        ) as HTMLParagraphElement;

        const emailContainer = document.querySelector(
          ".recover",
        ) as HTMLDivElement;
        const recoverContainer = document.querySelector(
          ".register",
        ) as HTMLDivElement;

        if (event.target === formEmail) {
          errorMsgEmail.textContent = "";
          errorMsgEmail.classList.remove("text-red-500");
          errorMsgEmail.classList.remove("text-green-500");

          const correoo = (event.target as HTMLFormElement).correo.value;

          const response = await fetch("/api/password/email", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ correo: correoo }),
          });
          const data = await response.json();

          if (response.status !== 200) {
            errorMsgEmail.textContent = data.message;
            errorMsgEmail.classList.add("text-red-500");
            return;
          }

          token = data.token;
          correo = correoo;
          emailContainer.classList.add("hidden");
          recoverContainer.classList.remove("hidden");
        }

        if (event.target === formRecover) {
          errorMsgPassword.textContent = "";
          errorMsgPassword.classList.remove("text-red-500");
          errorMsgPassword.classList.remove("text-green-500");

          const codigo = (event.target as HTMLFormElement).codigo.value;
          const contrasenia = (event.target as HTMLFormElement).contrasenia
            .value;
          const contrasenia_confirma = (event.target as HTMLFormElement)
            .contrasenia_confirma.value;

          if (contrasenia !== contrasenia_confirma) {
            errorMsgPassword.textContent = "Las contraseñas no coinciden";
            errorMsgPassword.classList.add("text-red-500");
            return;
          }

          if (token !== codigo) {
            errorMsgPassword.textContent = "El código no es válido";
            errorMsgPassword.classList.add("text-red-500");
            return;
          }

          const response = await fetch("/api/password/recover", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ correo, contrasenia }),
          });
          const data = await response.json();

          if (response.status !== 200) {
            errorMsgPassword.textContent = data.message;
            errorMsgPassword.classList.add("text-red-500");
            return;
          }

          errorMsgPassword.textContent = data.message;
          errorMsgPassword.classList.add("text-green-500");
          setTimeout(() => {
            window.location.href = "/account/login";
          }, 2000);
        }
      });
    </script>
  </div>

  <style>
    body {
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
    }

    .container {
      position: relative;
      width: 100%;
      max-width: 500px;
      border-radius: 30px;
      box-shadow: 0 0 30px rgba(0, 0, 0, 0.2);
      margin: 20px;
      overflow: hidden;
      background: #ddd5cb;
    }

    .form-box {
      width: 100%;
      height: 100%;
      background: #ddd5cb;
      align-items: center;
      color: #333;
      text-align: center;
      padding: 40px;
      z-index: 1;
      transition:
        0.3s ease-in-out,
        visibility 0s;
    }

    form {
      width: 100%;
      transition: all 0.3s ease-in-out;
    }

    /* Tamaño del texto */
    .container h1 {
      font-size: 32px;
    }

    /* Posición del icono en input */
    .input-box {
      position: relative;
      margin: 15px 0;
    }

    /* Para input */
    .input-box input {
      width: 100%;
      padding: 13px 50px 13px 20px;
      background: #f8f6f4;
      border-radius: 8px;
      border: none;
      outline: none;
      font-size: 16px;
      color: #333;
      font-weight: 500;
    }

    /* Texto del input */
    .input-box input::placeholder {
      color: #888;
      font-weight: 400;
    }

    /* Para ícono */
    .input-box i {
      position: absolute;
      right: 20px;
      top: 50%;
      transform: translateY(-50%);
      font-size: 20px;
      color: #a0826f;
    }

    /* Para el Texto  */
    .forgot-link a {
      font-size: 14.5px;
      color: #333;
      text-decoration: none;
    }

    /* Para botón */
    .btn {
      padding: 10px 40px;
      background: #a0826f;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      border: none;
      cursor: pointer;
      font-size: 16px;
      color: #fff;
      font-weight: 600;
    }
  </style>
</LayoutAccount>
